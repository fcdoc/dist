<!doctypehtml><meta charset=UTF-8><link rel="alternate" type="application/rss+xml" hreflang="zh" href="/zh.rss"><link rel=stylesheet href=//registry.npmmirror.com/18x/latest/files/_.css><script src=//registry.npmmirror.com/18x/latest/files/seo.js></script><link rel=alternate href="https://doc.flashduty.com/flashduty/advanced/customize_incident_attrs" hreflang=x-default><link rel=stylesheet href=//registry.npmmirror.com/18x/latest/files/seo.css><link rel=alternate hreflang=en href="https://doc.flashduty.com/en/flashduty/advanced/customize_incident_attrs.htm"><link rel=alternate hreflang=zh href="https://doc.flashduty.com/zh/flashduty/advanced/customize_incident_attrs.htm"><title>定制故障标题和严重程度</title><main><article><hr /><h2>brief: 通过修改推送参数，实现对故障的严重程度和标题等信息的定制</h2><h1>定制故障标题和严重程度</h1><p>通过修改推送参数，定制故障的严重程度和标题等信息。</p><h2>定制严重程度</h2><p><strong>在推送地址中增加Query参数severity，覆盖故障的严重程度。</strong></p><blockquote><p>[!NOTE]
适配所有通过 webhook 上报告警的集成。</p></blockquote><p>部分告警集成（比如 AWS CloudWatch）是不支持严重程度区分的，这种情况下我们可以在集成推送地址中进行指定。不同的告警策略配置不同的推送地址，以此实现对告警严重程度的区分。</p><p>示例：以下地址指定了 severity 参数，值为 Info（<strong>注意首字母大写</strong>）。通过此地址推送的告警，严重程度一定会覆盖为 Info。</p><pre><code>https://api.flashcat.cloud/event/push/alert/aws/cloudwatch?integration_key=your-integration-key?severity=Info
</code></pre><h2>定制故障标题</h2><blockquote><p>[!NOTE]
适配所有通过 webhook 上报告警的集成。</p></blockquote><p><strong>在推送地址中增加Query参数title_rule，动态生成故障标题。</strong></p><h3>通过简化语法生成</h3><p>用::分割子串，每一个子串可以是一个固定字符串或用$作为前缀的变量，变量内容将从标签中提取，提取不到不进行变量替换。</p><p>示例：</p><table><thead><tr><th>规则</th><th>标签值</th><th>生成内容</th></tr></thead><tbody><tr><td>$resource::$check</td><td>{&quot;resource&quot;: &quot;127.0.0.1&quot;, &quot;check&quot;: &quot;cpu idle low&quot;}</td><td>127.0.0.1 / cpu idle low</td></tr><tr><td>$resource::$check</td><td>{&quot;resource&quot;: &quot;127.0.0.1&quot;}</td><td>127.0.0.1 / $check</td></tr><tr><td>$resource::主机宕机</td><td>{&quot;resource&quot;: &quot;127.0.0.1&quot;}</td><td>127.0.0.1 / 主机宕机</td></tr></tbody></table><h3>通过${var}引用标签生成</h3><p>以[TPL]作为前缀，使用${}来引用变量，变量内容将从标签中提取，提取不到使用&lt;no value&gt;替代。</p><p>示例：</p><table><thead><tr><th>规则</th><th>标签值</th><th>生成内容</th></tr></thead><tbody><tr><td>[TPL]${resource} / ${check}</td><td>{&quot;resource&quot;: &quot;127.0.0.1&quot;, &quot;check&quot;: &quot;cpu idle low&quot;}</td><td>127.0.0.1 / cpu idle low</td></tr><tr><td>[TPL]${resource} / ${check}</td><td>{&quot;resource&quot;: &quot;127.0.0.1&quot;}</td><td>127.0.0.1 / &lt;no value&gt;</td></tr><tr><td>[TPL]${resource} / 主机宕机</td><td>{&quot;resource&quot;: &quot;127.0.0.1&quot;}</td><td>127.0.0.1 / 主机宕机</td></tr></tbody></table><h3>通过Golang模版语法生成</h3><p>以[TPL]作为前缀，使用{{}}来引用变量（可以引用标签以及其他变量），提取不到使用&lt;no value&gt;替代。变量范围参考<a href="#AlertEvent">告警事件定义</a>。</p><p>示例：</p><table><thead><tr><th>规则</th><th>标签值</th><th>生成内容</th></tr></thead><tbody><tr><td>[TPL]{{.Labels.resource}} / {{.Labels.check}}</td><td>{&quot;resource&quot;: &quot;127.0.0.1&quot;, &quot;check&quot;: &quot;cpu idle low&quot;}</td><td>127.0.0.1 / cpu idle low</td></tr><tr><td>[TPL]{{.Labels.resource}} / {{.Labels.check}}</td><td>{&quot;resource&quot;: &quot;127.0.0.1&quot;}</td><td>127.0.0.1 / &lt;no value&gt;</td></tr><tr><td>[TPL]{{.Labels.resource}} / 主机宕机</td><td>{&quot;resource&quot;: &quot;127.0.0.1&quot;}</td><td>127.0.0.1 / 主机宕机</td></tr></tbody></table><h2>常见问题</h2><p>|+| 使用标签动态生成标题，如果标签不存在怎么办？</p><pre><code>取决于您使用哪一种变量获取方式，标题可能会保留原始的变量信息或使用\&lt;no value\&gt;替代。

即使获取不到变量，也不影响告警的生成，您可放心调试。
</code></pre></article><nav><a href="/">doc.flashduty.com</a><a href="/zh/flashduty">FlashDuty : 一站式告警响应平台</a></nav><footer><div id="Ft"><b><a class="site" href="//flashcat.cloud"></a><b>© 快猫星云</b><b>文档由<a class="a" href="https://i18n.site">i18n.site</a>构建</b></b><b><a href="//github.com/flashcatcloud">&#xe64c;</a></b></div></footer></main>