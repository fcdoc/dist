<!doctypehtml><meta charset=UTF-8><link rel="alternate" type="application/rss+xml" hreflang="zh" href="/zh.rss"><link rel=stylesheet href=//registry.npmmirror.com/18x/latest/files/_.css><script src=//registry.npmmirror.com/18x/latest/files/seo.js></script><link rel=alternate href="https://doc.flashduty.com/flashduty/conf/how_to_filter" hreflang=x-default><link rel=stylesheet href=//registry.npmmirror.com/18x/latest/files/seo.css><link rel=alternate hreflang=en href="https://doc.flashduty.com/en/flashduty/conf/how_to_filter.htm"><link rel=alternate hreflang=zh href="https://doc.flashduty.com/zh/flashduty/conf/how_to_filter.htm"><title>配置过滤条件</title><main><article><hr /><h2>brief: Flashduty的分派策略、静默、抑制、路由、标签增强等功能中，大量使用条件匹配来过滤特定告警或故障，本文介绍如何配置这些条件</h2><h1>配置过滤条件</h1><p>Flashduty 中的过滤条件用于匹配不同的告警、故障或者事件。通过过滤条件，我们可以针对特定的对象进行筛选再操作。本文向您介绍过滤条件的设计和配置方法。</p><h2>在哪里使用过滤条件？</h2><p>过滤条件应用于以下场景：</p><ol><li><strong>分派策略</strong>：同一个协作空间允许创建多个分派策略，每个分派策略可以设置不同的过滤条件。您可以针对不同的故障设定不同的分派对象。</li><li><strong>静默规则</strong>：设置过滤条件来匹配特定的故障，满足条件的故障将会被静默。</li><li><strong>抑制规则</strong>：设置过滤条件，分别匹配新触发的故障和已有的活跃故障，当新故障满足条件，将被抑制。</li><li><strong>告警聚合</strong>：告警聚合支持默认的聚合维度，但当您需要细粒度控制时，您需要设置过滤条件，匹配特定的告警，并针对这部分故障设置新的聚合维度。</li><li><strong>路由规则</strong>：当使用集成中心的告警集成，可以设置全局路由匹配规则。使用不同的过滤条件匹配不同的告警，并路由到特定协作空间。</li><li><strong>标签增强</strong>：设置过滤条件来匹配特定的告警，满足条件的告警按照规则进行标签的生成。</li></ol><h2>如何配置过滤条件？</h2><h3>规则的设计</h3><p>Flashduty 将整个过滤条件做了抽象，期望做到最小化配置且满足大部分场景需求。</p><p>整体判断逻辑分为多组条件：</p><ul><li>组内条件之间为 <strong><code>and</code></strong> 关系，即每一个条件均匹配，整个组才为匹配。</li><li>组与组之间为 <strong><code>or</code></strong> 关系，即任一组条件匹配，整体即为匹配。</li></ul><p>每一个条件内部，分字段（field）、操作符（oper）以及目标值（values）。其中，操作符仅有两种情况：</p><ul><li><strong>匹配</strong>：目标可以有多个 value，任一 value 满足条件，则该条件匹配。</li><li><strong>不匹配</strong>：目标可以有多个 value，所有 value 均不满足条件，则该条件匹配。</li></ul><blockquote><p>[!NOTE]
条件中的目标值 value，全部为字符串。并支持<strong>精确</strong>、<strong>正则</strong>、<strong>通配</strong>、<strong>IP段</strong>和<strong>数值大小</strong>等多种匹配方式。</p></blockquote><img src="https://fc.3ti.site/zh/flashduty/conf/how_to_filter/1.avif" style="display: block; margin: 0 auto;" height="300"><p>如上图所示，我们有两组条件，每组条件内有两个条件，条件匹配值有多个。如果严重程度为 “Critical” 或 “Warning”，且check标签等于 “Binlog同步延迟”，则整体满足条件。否则，如果 check 标签包含 “cpu”、“io” 或 “disk” 任一字样，且 value 标签的数值大于 90，整体也满足条件。我们也可以使用一个表达式直观的描述过滤条件：</p><pre><code class="language-i18n">( severity == Critical|Warning &amp;&amp; labels.check == Binlog同步延迟 )
or
( labels.check == /cpu/|/io/|/disk/ &amp;&amp; labels.value == num:gt:90 )
</code></pre><h3>按照正则过滤</h3><p>当 value 字符串以<code>/</code>为前后缀，整个 value 将被识别为__正则__。此时，目标值必须满足这个正则，才算匹配通过。</p><p>举例如下：</p><ul><li>labels.check：/宕机/，check标签包含”宕机“时，即匹配。</li></ul><blockquote><p>[!NOTE]
Flashduty 全平台使用<code>RE2</code>正则规范，部分<code>Perl</code>语法可能无法匹配。您可使用 AI Chatbot 生成表达式，并前往 <a href="https://re2js.leopard.in.ua/">RE2 Playground</a> 进行验证。</p></blockquote><h3>按照通配符过滤</h3><p>当 value 字符串包含<code>*</code>或<code>?</code>且没有<code>/</code>前后缀，整个 value 将被识别为__通配__。注意，当前仅支持<code>*</code>和<code>?</code>，<code>*</code>可匹配零个或多个任意字符，<code>?</code>可匹配单个任意字符。目标值必须满足这个通配字符串，才算匹配通过。</p><p>举例如下：</p><ul><li>labels.check：宕机*，check标签以”宕机“作为前缀，即匹配。</li></ul><blockquote><p>[!NOTE]
您可使用<code>*</code>来判断一个字段__存在(Exist)<strong>或__不存在(NotExsit)</strong>。</p><p>如果一个字段__匹配 *<strong>，表示您需要该字段存在。如果一个字段__不匹配 *</strong>，表示您需要该字段不存在。</p></blockquote><h3>按照 IP 段过滤</h3><p>当 value 以<code>cidr</code>作为前缀，整个 value 将被识别为__IP 段__。</p><p>举例如下：</p><ul><li>labels.host：cidr:10.0.0.206/24，ip 标签在”10.0.0.206/24“这个 IP 段内，即匹配。</li></ul><h3>按照数值过滤</h3><p>当 value 以<code>num:[gt|ge|lt|le]:</code>作为前缀，整个 value 将被识别为__数值大小匹配__。大小判断规则如下：</p><ul><li><strong>gt</strong>：大于</li><li><strong>ge</strong>：大于等于</li><li><strong>lt</strong>：小于</li><li><strong>le</strong>：小于等于</li></ul><p>举例如下：</p><ul><li>labels.value：num:ge:90，value 标签大于等于 90，即匹配。</li></ul><h3>按精确值过滤</h3><p>当 value 不满足上述任意格式，即被视为__精确匹配__。此时，仅当字符串完全相等时，才算匹配通过。</p><h2>常见问题</h2><p>|+| 为什么系统不提示我可选标签？</p><pre><code>Flashduty 接受大量数据上报，为了保证系统的稳定性，系统仅查找过去 24 小时内，最多 500 条告警事件进行标签的去重操作。因此提取到的标签范围可能会动态变化，甚至在过去24小时没有新数据时提取不到任何标签。

这种情况下，**您可以手动输入标签**。
</code></pre><p>|+| 我的正则已经在线下通过校验，为什么在系统中无法匹配？</p><pre><code>Flashduty 全平台使用`RE2`正则规范，部分`Perl`语法可能无法匹配。您可使用 AI Chatbot 生成表达式，并前往 RE2 Playground 进行验证。
</code></pre></article><nav><a href="/">doc.flashduty.com</a><a href="/zh/flashduty">FlashDuty : 一站式告警响应平台</a></nav><footer><div id="Ft"><b><a class="site" href="//flashcat.cloud"></a><b>© 快猫星云</b><b>文档由<a class="a" href="https://i18n.site">i18n.site</a>构建</b></b><b><a href="//github.com/flashcatcloud">&#xe64c;</a></b></div></footer></main>