<!doctypehtml><meta charset=UTF-8><link rel="alternate" type="application/rss+xml" hreflang="en" href="/en.rss"><link rel=stylesheet href=//registry.npmmirror.com/18x/latest/files/_.css><script src=//registry.npmmirror.com/18x/latest/files/seo.js></script><link rel=alternate href="https://doc.flashduty.com/flashduty/mixin/alert_integration/oceanbase" hreflang=x-default><link rel=canonical href="https://doc.flashduty.com/flashduty/mixin/alert_integration/oceanbase"><link rel=stylesheet href=//registry.npmmirror.com/18x/latest/files/seo.css><link rel=alternate hreflang=en href="https://doc.flashduty.com/en/flashduty/mixin/alert_integration/oceanbase.htm"><link rel=alternate hreflang=zh href="https://doc.flashduty.com/zh/flashduty/mixin/alert_integration/oceanbase.htm"><title>OceanBase Alert Events</title><main><article><hr /><h2>brief: Synchronize OceanBase alert events to Flashcat via webhook to achieve automated noise reduction processing of alert events</h2><h1>OceanBase Alert Events</h1><p>Synchronize OceanBase alert events to Flashcat via webhook to achieve automated noise reduction processing of alert events</p><h2>In Flashduty</h2><p>You can obtain an integration push address through the following two methods. Choose either one.</p><h3>Use Proprietary Integration</h3><p>When you do not need to route alert events to different collaboration spaces, this method is preferred as it is simpler.</p><p>|+| Expand</p><pre><code>1. Enter the Flashduty console, select **Collaboration Space**, and enter the details page of a specific space
2. Select the **Integrated Data** tab, click **Add an Integration**, and enter the Add Integration page
3. Select **OceanBase** integration, click **Save**, and generate a card.
4. Click on the generated card to view the **push address**, copy it for later use, and complete the setup.
</code></pre><h3>Use Shared Integration</h3><p>When you need to route alert events to different collaboration spaces based on the payload information, this method is preferred.</p><p>|+| Expand</p><pre><code>1. Enter the Flashduty console, select **Integration Center =&gt; Alert Events**, and go to the integration selection page.
2. Choose **OceanBase** integration:
- **Integration Name**: Define a name for the current integration.
3. After clicking **Save**, copy the newly generated **push address** on the current page for later use.
4. Click **Create Route** to configure routing rules for the integration. You can match different alerts to different collaboration spaces based on conditions, or you can set a default collaboration space as a fallback and adjust as needed.
5. Complete.
</code></pre><h2>In OceanBase</h2><h2>OceanBase Alert Push Configuration</h2><h3>Step 1: Configure Alert Channel</h3><ol><li>Log in to your OceanBase console and select the alert center.</li><li>Enter <strong>Alert Channel</strong>, click the <strong>New Channel</strong> button to start creating a new channel.</li><li>Select <strong>Custom Script</strong> for the channel type.</li><li>The basic configuration content is as shown in the figure below:</li></ol><img alt="drawing" width="600" src="https://fc.3ti.site/zh/flashduty/mixin/alert_integration/oceanbase/1.avif" /><ol start="5"><li>Copy the following script content in the configuration channel, and <strong>please add the integration_key parameter in the script with the integration_key value in the FlashDuty address</strong> .</li></ol><pre><code class="language-i18n">#!/usr/bin/env bash

function sendToFlashDuty() {
URL=&quot;${address}/event/push/alert/standard?integration_key=${integration_key}&quot;
curl -s -X POST ${URL} -H 'Content-Type: application/json' -d '{
&quot;event_status&quot;: &quot;'${alert_level}'&quot;,
&quot;alert_key&quot;: &quot;'${alarm_id}'&quot;,
&quot;description&quot;: &quot;'&quot;${alarm_description//\&quot;/\\\&quot;}&quot;'&quot;,
&quot;title_rule&quot;: &quot;$app_types::$name::$alarm_targets&quot;,
&quot;event_time&quot;:'${timestamp}',
&quot;labels&quot;: {
&quot;app_types&quot;:&quot;'${app_type}'&quot;,
&quot;id&quot;:&quot;'${alarm_id}'&quot;,
&quot;name&quot;:&quot;'${alarm_name}'&quot;,
&quot;alarm_level&quot;:&quot;'${alarm_level}'&quot;,
&quot;alarm_status&quot;:&quot;'${alarm_status}'&quot;,
&quot;alarm_active_at&quot;:&quot;'${alarm_active_at}'&quot;,
&quot;alarm_threshold&quot;:&quot;'${alarm_threshold}'&quot;,
&quot;alarm_type&quot;:&quot;'${alarm_type}'&quot;,
&quot;alarm_targets&quot;:&quot;'${alarm_target}'&quot;,
&quot;ob_cluster_group&quot;:&quot;'${ob_cluster_group}'&quot;,
&quot;ob_cluster&quot;:&quot;'${ob_cluster}'&quot;,
&quot;hostIP&quot;:&quot;'${host_ip}'&quot;,
&quot;app_cluster&quot;:&quot;'${app_cluster}'&quot;,
&quot;alarm_description&quot;:&quot;'&quot;${alarm_description//\&quot;/\\\&quot;}&quot;'&quot;,
&quot;alarm_url&quot;:&quot;'${alarm_url}'&quot;
}
}'

return $?
}

alarm_name=$(echo ${alarm_name} | sed  &quot;s/ /_/g&quot;)
alarm_target=$(echo ${alarm_target} | sed  &quot;s/ /_/g&quot;)

#Use the alert update time as the alert generation time
timestamp=$(TZ=UTC date -d &quot;${alarm_updated_at}&quot; +%s)

#The status and level of OceanBase alert notifications are in Chinese, so convert them to MD5 first and then make a judgment
levelMd5=$(echo ${alarm_level} | md5sum | awk '{print$1}')
statusMd5=$(echo ${alarm_status} | md5sum | awk '{print$1}')

#Status MD5
active=&quot;048d106318302b41372b4292b5696ad4&quot;
Inactive=&quot;bf7da164d431439fe9668fbc964110c4&quot;

#Alert Level MD5
down=&quot;2e1558b0a152fae2dd15884561b1508d&quot;
critical=&quot;59b9b38574ca2ee4f5e264b56f49a83f&quot;
alert=&quot;723931b03a5d1cec59eac40cf0703580&quot;
caution=&quot;abf4d55ba8926eff32cb44065e634ed3&quot;
info=&quot;6aae3f4254789d72aa0cc8ed55b8f11f&quot;

address=&quot;https://api.flashcat.cloud&quot;
integration_key=&quot;&quot;

#Convert OceanBase alert level definitions
if [[ ${statusMd5} == ${Inactive} ]];then
alert_level=&quot;Ok&quot;
timestamp=$(TZ=UTC date -d &quot;${alarm_resolved_at}&quot; +%s)
elif [[ ${statusMd5} == &quot;${active}&quot; ]];then
if [[ ${levelMd5} == ${down} || ${levelMd5} == ${critical} ]];then
alert_level=&quot;Critical&quot;
elif [[ ${levelMd5} == ${alert} ]];then
alert_level=&quot;Warning&quot;
elif [[ ${levelMd5} == ${caution}  ||  ${levelMd5} == ${info} ]];then
alert_level=&quot;Info&quot;
fi
fi

#Notifications will be sent only if the status is &quot;In Alert&quot; or &quot;Recovered&quot;; if the status is &quot;Blocked&quot; or &quot;Suppressed,&quot; no notification will be sent
if [[ ${statusMd5} == ${active} || ${statusMd5} == ${Inactive} ]];then
sendToFlashDuty
fi
</code></pre><ol start="6"><li>Just fill in {} for the Response verification information.</li><li>Select Markdown as the alert message format in the message configuration.</li><li><strong>Select Simplified Chinese</strong> for the alert message template, fill in the following content, and submit.</li></ol><pre><code class="language-i18n">OCPAlert Notification - Single Alert
- Alert ID: ${alarm_id}
- Name: ${alarm_name}
- Level: ${alarm_level}
- Alert Object: ${alarm_target}
- Service: ${service}
- Overview: ${alarm_summary}
- Generation Time: ${alarm_active_at}
- Update Time: ${alarm_updated_at}
- Recovery Time: ${alarm_resolved_at}
- Details: ${alarm_description}
- Status: ${alarm_status}
- Alert Type: ${alarm_type}
- Alert Threshold: ${alarm_threshold}
- Cluster Group: ${ob_cluster_group}
- Cluster: ${ob_cluster}
- Host: ${host_ip}
- Application Cluster: ${app_cluster}
- OCPLink: ${alarm_url}
</code></pre><h3>Step 2: Configure Alert Push</h3><ol><li>Create a new push configuration, path: <strong>Alert Center =&gt; Alert Push =&gt; New Push Configuration</strong>.</li><li>Configure the push type and specified objects as needed.</li></ol><img alt="drawing" width="600" src="https://fc.3ti.site/zh/flashduty/mixin/alert_integration/oceanbase/2.avif" /><ol start="3"><li>Select <strong>Simplified Chinese</strong> as the push language.</li><li>Select <strong>FlashDuty</strong> as the alert channel.</li><li>Enable <strong>Recovery Notifications</strong>.</li><li>Submit.</li></ol><img alt="drawing" width="600" src="https://fc.3ti.site/zh/flashduty/mixin/alert_integration/oceanbase/3.avif" /><h2>Status Comparison</h2><table><thead><tr><th>OceanBase</th><th>Flashcat</th><th>Status</th></tr></thead><tbody><tr><td>Stop Service</td><td>Critical</td><td>High</td></tr><tr><td>High</td><td>Warning</td><td>High</td></tr><tr><td>Average</td><td>Warning</td><td>Average</td></tr><tr><td>Notice</td><td>Info</td><td>Disaster</td></tr><tr><td>Disaster</td><td>Info</td><td>Disaster</td></tr></tbody></table><h2>Status Comparison</h2><table><thead><tr><th>OceanBase</th><th>Flashcat</th><th>Status</th></tr></thead><tbody><tr><td>Stop Service</td><td>Critical</td><td>High</td></tr><tr><td>High</td><td>Warning</td><td>High</td></tr><tr><td>Average</td><td>Warning</td><td>Average</td></tr><tr><td>Notice</td><td>Info</td><td>Disaster</td></tr><tr><td>Disaster</td><td>Info</td><td>Disaster</td></tr></tbody></table></article><nav><a href="/">doc.flashduty.com</a><a href="/en/flashduty">FlashDuty: One-Stop Alert Response Platform</a></nav><footer><div id="Ft"><b><a class="site" href="//flashcat.cloud"></a><b>Â© FlashCat Cloud</b><b>Site Build By <a class="a" href="https://i18n.site">I18N.SITE</a></b></b><b><a href="//github.com/flashcatcloud">&#xe64c;</a></b></div></footer></main>