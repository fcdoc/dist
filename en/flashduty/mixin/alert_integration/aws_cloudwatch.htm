<!doctypehtml><meta charset=UTF-8><link rel="alternate" type="application/rss+xml" hreflang="en" href="/en.rss"><link rel=stylesheet href=//registry.npmmirror.com/18x/latest/files/_.css><script src=//registry.npmmirror.com/18x/latest/files/seo.js></script><link rel=alternate href="https://doc.flashduty.com/flashduty/mixin/alert_integration/aws_cloudwatch" hreflang=x-default><link rel=canonical href="https://doc.flashduty.com/flashduty/mixin/alert_integration/aws_cloudwatch"><link rel=stylesheet href=//registry.npmmirror.com/18x/latest/files/seo.css><link rel=alternate hreflang=en href="https://doc.flashduty.com/en/flashduty/mixin/alert_integration/aws_cloudwatch.htm"><link rel=alternate hreflang=zh href="https://doc.flashduty.com/zh/flashduty/mixin/alert_integration/aws_cloudwatch.htm"><title>AWS CloudWatch Integration</title><main><article><hr /><h2>brief: Synchronize AWS CloudWatch alert events to Flashduty via webhook to achieve automated noise reduction of alert events</h2><h1>AWS CloudWatch Integration</h1><p>Synchronize AWS CloudWatch alert events to Flashduty via webhook to achieve automated noise reduction of alert events.</p><h2>In Flashduty</h2><p>You can obtain an integration push address through the following two methods. Choose either one.</p><h3>Use Proprietary Integration</h3><p>When you do not need to route alert events to different collaboration spaces, this method is preferred as it is simpler.</p><p>|+| Expand</p><pre><code>1. Enter the Flashduty console, select **Collaboration Space**, and enter the details page of a specific space
2. Select the **Integrated Data** tab, click **Add an Integration**, and enter the Add Integration page
3. Select **AWS CloudWatch** integration, click **Save**, and generate a card.
4. Click on the generated card to view the **push address**, copy it for later use, and complete the setup.
</code></pre><h3>Use Shared Integration</h3><p>When you need to route alert events to different collaboration spaces based on the payload information, this method is preferred.</p><p>|+| Expand</p><pre><code>1. Enter the Flashduty console, select **Integration Center =&gt; Alert Events**, and go to the integration selection page.
2. Choose **AWS CloudWatch** integration:
- **Integration Name**: Define a name for the current integration.
3. After clicking **Save**, copy the newly generated **push address** on the current page for later use.
4. Click **Create Route** to configure routing rules for the integration. You can match different alerts to different collaboration spaces based on conditions, or you can set a default collaboration space as a fallback and adjust as needed.
5. Complete.
</code></pre><h2>In AWS CloudWatch</h2><ol><li>Log in to your AWS console, search for <code>Simple Notification Service</code> and enter the corresponding product console</li><li>Enter the <code>Topics</code> page, click the <code>Create topic</code> button to start creating the topic</li><li>Set <code>Type</code> to <code>Standard</code> and name it <code>FlashDuty</code></li><li>Click the <code>Create topic</code> button to complete the topic creation</li><li>Enter the <code>Subscriptions</code> page, click the <code>Create subscription</code> button to create a subscription for the topic</li><li>Set <code>Topic ARN</code> to <code>FlashDuty</code>, <code>Protocol</code> to <code>HTTPS</code>, and <code>Endpoint</code> to the integration push address (fill in the integration name on the current page, and the address will be generated after saving)</li><li>Click the <code>Create subscription</code> button to complete the subscription creation</li></ol><img alt="drawing" width="600" src="https://fc.3ti.site/zh/flashduty/mixin/alert_integration/aws_cloudwatch/1.avif" /><ol start="8"><li>Return to the <code>Subscriptions</code> page. When the subscription status is <code>Confirmed</code>, it means the subscription address verification is successful. Otherwise, please contact Flashduty</li><li>Search for <code>CloudWatch</code> and enter the corresponding product console</li><li>Enter the <code>All Alarms</code> page and choose to create or edit an existing alert strategy</li><li>For the <code>Notification</code> step, set the push target <code>SNS topic</code> to <code>FlashDuty</code> for the three states: <code>In alarm</code>, <code>OK</code>, and <code>Insufficient data</code>, as shown in the figure below:</li></ol><img alt="drawing" width="600" src="https://fc.3ti.site/zh/flashduty/mixin/alert_integration/aws_cloudwatch/2.avif" /><ol start="12"><li>Return to the integration list. If the latest event time is displayed, the configuration is successful and the event has been received</li><li>Finish</li></ol><h2>Status Comparison</h2><p>All indicator alerts monitored by CloudWatch correspond to Flashduty &quot;warning&quot; level alerts.</p></article><nav><a href="/">doc.flashduty.com</a><a href="/en/flashduty">FlashDuty: One-Stop Alert Response Platform</a></nav><footer><div id="Ft"><b><a class="site" href="//flashcat.cloud"></a><b>Â© FlashCat Cloud</b><b>Site Build By <a class="a" href="https://i18n.site">I18N.SITE</a></b></b><b><a href="//github.com/flashcatcloud">&#xe64c;</a></b></div></footer></main>